name: Run FormaLM analysis on Python
defaults:
  run:
    shell: bash

on:
  pull_request:
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  check1:
    name: Check on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os }}
    container: ghcr.io/xebia-functional/formalm:main
    permissions:
      contents: read  #  to fetch code (actions/checkout)
      packages: read  #  to fetch packages (docker)
      discussions: write
      pull-requests: write
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        include:
          - os: ubuntu-latest
            shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Restore native cache
        id: cache-native
        uses: actions/cache@v3
        with:
          path: |
            scripts/build
          key: ${{ runner.os }}-native-${{ hashFiles('./scripts/*') }}

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('/*.gradle*', '/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Setup OPENAI token
        run: echo "OPENAI_TOKEN=${{ secrets.OPENAI_TOKEN }} " >> $GITHUB_ENV
      - name: Setup OPENAI_REQUEST_TIMEOUT
        run: echo "OPENAI_REQUEST_TIMEOUT=60" >> $GITHUB_ENV
      - name: Adding Poetry to path
        run: echo "/root/.local/share/pypoetry/venv/bin" >> $GITHUB_PATH
      - name: Testing
        run: |
          poetry --version
      - name: Run FormaLM analysis
        run: >
          java -jar /home/gradle/formalm/formalm-0.0.1-SNAPSHOT.jar 
          repo-path="$GITHUB_WORKSPACE" 
          output-path="/home/gradle"
          scoverage-restrict-results=5
      - name: Show SARIF file
        run: cat /home/gradle/report.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: /home/gradle/report.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          #category: my-analysis-tool
      - name: List files
        id: listFiles
        run: |
          jsonContent="$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$OWNER/$REPO/pulls/$PULL_NUMBER/files)"
          echo "JSON_CONTENT="$jsonContent >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
      - name: Generate review comment
        uses: actions/github-script@v6
        env:
          DATA: ${{steps.listFiles.outputs.JSON_CONTENT}}
          URL: ${{ github.server_url }}/${{ github.repository }}
        with:
          script: |
            const script = require('./.github/workflows/scripts/reports-to-comments.js')
            script({github, context})
